name: FlaskSession-8756-11480-18921
version: "0.3"

# Access control:
#   - only the data owner (CREATOR) can read or update the session
#   - even the data owner cannot read the session secrets (i.e., the volume key and tag) or delete the session

access_policy:
  read:
   - CREATOR
  update:
   - CREATOR

services:
   - name: flask_restapi
     image_name: flask_restapi_image
     mrenclaves: [67b8017f7083435cb614b87c8daa14303f741a10a2a0bbf5dfabec777cf629b9]
     command: "python3 /fspf/encrypted-files/rest_api.py"
     environment:
      SCONE_MODE: hw
      SCONE_LOG: "7"
     pwd: /
     fspf_tag: a4300f8db63429e5755fde66f29a9774
     fspf_key: d06bd96b5f60a157509a9a73a4663c3c6681aa70584dfed4526b2a7b8986061f
     fspf_path: /fspf/fs.fspf

images:
   - name: flask_restapi_image
     injection_files:
        - path: /tls/flask.crt
          content: $$SCONE::flask.crt$$
        - path: /tls/flask.key
          content: $$SCONE::flask.key$$
        - path: /tls/redis-ca.crt
          content: $$SCONE::redis_ca_cert.chain$$
        - path: /tls/client.crt
          content: $$SCONE::redis_client_cert.crt$$
        - path: /tls/client.key
          content: $$SCONE::redis_client_cert.key$$

# Import client credentials from DB session.
secrets:
    - name: api_ca_key
      kind: private-key
    - name: api_ca_cert
      kind: x509-ca
      export_public: true
      private_key: api_ca_key
    - name: flask_key
      kind: private-key
    - name: flask
      kind: x509
      private_key: flask_key
      issuer: api_ca_cert
      dns:
        - api
    - name: redis_client_key
      import:
        session: RedisSession-1655-32625-27225
        secret: redis_client_key
    - name: redis_client_cert
      import:
        session: RedisSession-1655-32625-27225
        secret: redis_client_cert
    - name: redis_ca_cert
      import:
        session: RedisSession-1655-32625-27225
        secret: redis_ca_cert

security:
  attestation:
    tolerate: [debug-mode, hyperthreading, outdated-tcb]
    ignore_advisories: "*"
